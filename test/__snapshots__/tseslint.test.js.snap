// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`tseslint recommended config 1`] = `
"[
  {
    rules: {
      'constructor-super': 'error',
      'for-direction': 'error',
      'getter-return': 'error',
      'no-async-promise-executor': 'error',
      'no-case-declarations': 'error',
      'no-class-assign': 'error',
      'no-compare-neg-zero': 'error',
      'no-cond-assign': 'error',
      'no-const-assign': 'error',
      'no-constant-condition': 'error',
      'no-control-regex': 'error',
      'no-debugger': 'error',
      'no-delete-var': 'error',
      'no-dupe-args': 'error',
      'no-dupe-class-members': 'error',
      'no-dupe-else-if': 'error',
      'no-dupe-keys': 'error',
      'no-duplicate-case': 'error',
      'no-empty': 'error',
      'no-empty-character-class': 'error',
      'no-empty-pattern': 'error',
      'no-ex-assign': 'error',
      'no-extra-boolean-cast': 'error',
      'no-extra-semi': 'error',
      'no-fallthrough': 'error',
      'no-func-assign': 'error',
      'no-global-assign': 'error',
      'no-import-assign': 'error',
      'no-inner-declarations': 'error',
      'no-invalid-regexp': 'error',
      'no-irregular-whitespace': 'error',
      'no-loss-of-precision': 'error',
      'no-misleading-character-class': 'error',
      'no-mixed-spaces-and-tabs': 'error',
      'no-new-symbol': 'error',
      'no-nonoctal-decimal-escape': 'error',
      'no-obj-calls': 'error',
      'no-octal': 'error',
      'no-prototype-builtins': 'error',
      'no-redeclare': 'error',
      'no-regex-spaces': 'error',
      'no-self-assign': 'error',
      'no-setter-return': 'error',
      'no-shadow-restricted-names': 'error',
      'no-sparse-arrays': 'error',
      'no-this-before-super': 'error',
      'no-undef': 'error',
      'no-unexpected-multiline': 'error',
      'no-unreachable': 'error',
      'no-unsafe-finally': 'error',
      'no-unsafe-negation': 'error',
      'no-unsafe-optional-chaining': 'error',
      'no-unused-labels': 'error',
      'no-unused-vars': 'error',
      'no-useless-backreference': 'error',
      'no-useless-catch': 'error',
      'no-useless-escape': 'error',
      'no-with': 'error',
      'require-yield': 'error',
      'use-isnan': 'error',
      'valid-typeof': 'error'
    }
  },
  {
    languageOptions: {
      parser: {
        meta: { name: 'typescript-eslint/parser', version: '7.2.0' },
        parseForESLint: [Function: parseForESLint]
      },
      sourceType: 'module'
    },
    plugins: {
      '@typescript-eslint': {
        meta: { name: '@typescript-eslint/eslint-plugin', version: '7.2.0' },
        rules: {
          'adjacent-overload-signatures': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'array-type': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'await-thenable': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'ban-ts-comment': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'ban-tslint-comment': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'ban-types': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'block-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'brace-style': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'class-literal-property-style': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'class-methods-use-this': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'comma-dangle': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'comma-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-generic-constructors': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-indexed-object-style': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-return': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-type-assertions': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-type-definitions': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-type-exports': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'consistent-type-imports': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'default-param-last': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'dot-notation': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'explicit-function-return-type': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'explicit-member-accessibility': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'explicit-module-boundary-types': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'func-call-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          indent: {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'init-declarations': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'key-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'keyword-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'lines-around-comment': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'lines-between-class-members': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'max-params': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'member-delimiter-style': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'member-ordering': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'method-signature-style': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'naming-convention': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-array-constructor': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-array-delete': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-base-to-string': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-confusing-non-null-assertion': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-confusing-void-expression': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-dupe-class-members': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-duplicate-enum-values': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-duplicate-type-constituents': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-dynamic-delete': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-empty-function': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-empty-interface': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-explicit-any': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-extra-non-null-assertion': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-extra-parens': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-extra-semi': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-extraneous-class': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-floating-promises': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-for-in-array': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-implied-eval': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-import-type-side-effects': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-inferrable-types': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-invalid-this': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-invalid-void-type': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-loop-func': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-loss-of-precision': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-magic-numbers': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-meaningless-void-operator': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-misused-new': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-misused-promises': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-mixed-enums': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-namespace': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-non-null-asserted-nullish-coalescing': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-non-null-asserted-optional-chain': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-non-null-assertion': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-redeclare': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-redundant-type-constituents': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-require-imports': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-restricted-imports': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-shadow': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-this-alias': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-throw-literal': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-type-alias': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-unnecessary-boolean-literal-compare': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-unnecessary-condition': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-unnecessary-qualifier': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unnecessary-type-arguments': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unnecessary-type-assertion': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-unnecessary-type-constraint': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-argument': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-assignment': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-call': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-declaration-merging': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-enum-comparison': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-member-access': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-return': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unsafe-unary-minus': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-unused-expressions': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-unused-vars': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-use-before-define': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'no-useless-constructor': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-useless-empty-export': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-useless-template-literals': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'no-var-requires': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'non-nullable-type-assertion-style': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'object-curly-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'padding-line-between-statements': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'parameter-properties': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-as-const': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-destructuring': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-enum-initializers': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-find': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-for-of': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-function-type': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-includes': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-literal-enum-member': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-namespace-keyword': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-nullish-coalescing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-optional-chain': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-promise-reject-errors': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-readonly': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-readonly-parameter-types': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-reduce-type-parameter': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-regexp-exec': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-return-this-type': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'prefer-string-starts-ends-with': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'prefer-ts-expect-error': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'promise-function-async': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          quotes: {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'require-array-sort-compare': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'require-await': {
            create: [Function: create],
            defaultOptions: [],
            meta: [Object]
          },
          'restrict-plus-operands': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'restrict-template-expressions': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'return-await': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          semi: {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'sort-type-constituents': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'space-before-blocks': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'space-before-function-paren': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'space-infix-ops': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'strict-boolean-expressions': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'switch-exhaustiveness-check': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'triple-slash-reference': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'type-annotation-spacing': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          typedef: {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'unbound-method': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          },
          'unified-signatures': {
            create: [Function: create],
            defaultOptions: [Array],
            meta: [Object]
          }
        }
      }
    }
  },
  {
    files: [ '**/*.ts', '**/*.tsx', '**/*.mts', '**/*.cts' ],
    rules: {
      'constructor-super': 'off',
      'getter-return': 'off',
      'no-const-assign': 'off',
      'no-dupe-args': 'off',
      'no-dupe-class-members': 'off',
      'no-dupe-keys': 'off',
      'no-func-assign': 'off',
      'no-import-assign': 'off',
      'no-new-symbol': 'off',
      'no-obj-calls': 'off',
      'no-redeclare': 'off',
      'no-setter-return': 'off',
      'no-this-before-super': 'off',
      'no-undef': 'off',
      'no-unreachable': 'off',
      'no-unsafe-negation': 'off',
      'no-var': 'error',
      'prefer-const': 'error',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error'
    }
  },
  {
    rules: {
      '@typescript-eslint/ban-ts-comment': 'error',
      '@typescript-eslint/ban-types': 'error',
      'no-array-constructor': 'off',
      '@typescript-eslint/no-array-constructor': 'error',
      '@typescript-eslint/no-duplicate-enum-values': 'error',
      '@typescript-eslint/no-explicit-any': 'error',
      '@typescript-eslint/no-extra-non-null-assertion': 'error',
      'no-loss-of-precision': 'off',
      '@typescript-eslint/no-loss-of-precision': 'error',
      '@typescript-eslint/no-misused-new': 'error',
      '@typescript-eslint/no-namespace': 'error',
      '@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
      '@typescript-eslint/no-this-alias': 'error',
      '@typescript-eslint/no-unnecessary-type-constraint': 'error',
      '@typescript-eslint/no-unsafe-declaration-merging': 'error',
      'no-unused-vars': 'off',
      '@typescript-eslint/no-unused-vars': 'error',
      '@typescript-eslint/no-var-requires': 'error',
      '@typescript-eslint/prefer-as-const': 'error',
      '@typescript-eslint/triple-slash-reference': 'error'
    }
  }
]"
`;
